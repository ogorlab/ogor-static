---
import { useI18n } from "@/i18n";
import BaseLayout from "@/layouts/BaseLayout.astro"
import type { GetStaticPaths } from "astro";

const { t } = useI18n(Astro.currentLocale)

export const getStaticPaths = (() => {  
  return [
    { params: { lang: undefined }},
    { params: { lang: "en" }},
    { params: { lang: "fr" }}
  ];
}) satisfies GetStaticPaths;
---
<BaseLayout>
  <section id="hero">
    <div class="_body">
      <h1>{ t("home.hero_heading") }</h1>
      <p set:html={ t("home.hero_description") } />
    </div>
    <div class="_media1">
      <img src="" alt="1">
    </div>
    <div class="_media2">
      <img src="" alt="2">
    </div>
    <div class="_cta">
      <a href={ import.meta.env.PUBLIC_OGOR_APP_LOGIN_URL }>
        <span class="underline">{ t("home.hero_cta") }</span> →
      </a>
    </div>
  </section>

  <section id="features">
    <h2>{ t("home.why_ogor") }</h2>

    <section>
      <h3>{ t("home.feature1_heading") }</h3>
      <p>{ t("home.feature1_description") }</p>

      <div class="_media">
        <img src="" alt="feature">
      </div>
    </section>

    <section>
      <h3>{ t("home.feature2_heading") }</h3>
      <p>{ t("home.feature2_description") }</p>

      <div class="_media">
        <img src="" alt="feature">
      </div>
    </section>

    <div>
      <p set:html={ t("home.context") }/>
    </div>

    <section>
      <h3>{ t("home.feature3_heading") }</h3>
      <p>{ t("home.feature3_description") }</p>

      <div class="_media">
        <img src="" alt="feature">
      </div>
    </section>

    <section>
      <h3>{ t("home.feature4_heading") }</h3>
      <p>{ t("home.feature4_description") }</p>

      <div class="_media">
        <img src="" alt="feature">
      </div>
    </section>

    <p>Plus:</p>

    { [
        {
          name: t("accumulated_precipitation"),
        },
        {
          name: t("weather_forecast"),
        },
        {
          name: t("water_capacity"),
        },
        {
          name: t("crop_rotation"),
        },
        {
          name: t("soil_map"),
        },
        {
          name: t("vra"),
        },
        {
          name: t("soil_analysis"),
        }
      ].map(f => (
        <details>
          <summary set:html={ f.name } />
        </details>
      ))
    }
  </section>

  <section id="testimonials">
    <h2>{ t("home.testimonials_heading") }</h2>
    <p set:html={ t("home.testimonials_description") } />

    <div>
      <button>←</button>
      <button>→</button>
    </div>

    <div>
      <blockquote>
        <p>Agricultura de precizie înseamnă în primul rând să știi ce este acolo, în câmp!</p>
        <cite>
          Alin Oprea
          Ing. agronom jud. IF
        </cite>
      </blockquote>
    </div>
  </section>

  <section id="cta">
    <p>
      <strong>{ t("home.got_questions") }</strong>
      { t("home.here_to_help") }
    </p>
    <p>
      <a href="tel:+40754347347" class="btn btn-text rounded">
        <svg viewBox="0 0 48 48" class="icon">
          <use href="/public/icons.svg#phone" />
        </svg>
        { t("company.phone")}
      </a>
      <a href="mail:contact@ogor.ro" class="btn btn-text rounded">
        <svg viewBox="0 0 48 48" class="icon">
          <use href="/public/icons.svg#email" />
        </svg>
      </a>
    </p>
    <p>
      <a href={ import.meta.env.PUBLIC_OGOR_APP_LOGIN_URL } class="btn btn-black rounded">
        <svg class="icon">
          <use href="/logos/ogor.svg#logo" />
        </svg>
        <Fragment set:html={ t("home.cta") }/>
      </a>
    </p>
    <div class="assurances">
      <p>{ t("home.cta_assurance1") }</p>
      <span class="decoration">★</span>
      <p>{ t("home.cta_assurance2") }</p>
      <span class="decoration">★</span>
      <p>{ t("home.cta_assurance3") }</p>
    </div>
  </section>
  
  <section id="partners">
    <p>
      { t("home.with_the_support_of") }: <br>
      <span>
        <img src="" alt="ESA">
        <img src="" alt="ROSA">
      </span>
    </p><p>
      { t('home.partners') }: <br>
      <span>
        <img src="" alt="Alcedo">
      </span>
    </p>
  </section>
  <style>
    #partners {
      text-align: center;
      & p {
        display: inline-block;
        max-width: calc(var(--container) / 2);
        width: 50%;
        min-width: fit-content;
      }
    }
  </style>
</BaseLayout>


<style>
  #hero {
    /* Layout */
    @media (min-width: 800px) {
      display: grid;
      grid-template-columns: 1fr 1fr;
      grid-template-rows: 1fr 1fr auto;
      grid-template-areas: 
        "body   body"
        "media1 media2"
        "cta cta"
      ;
    }
    @media (min-width: 1200px) {
      grid-template-columns: var(--bleed) 1fr 1fr var(--bleed);
      grid-template-rows: auto 1fr auto;
      grid-template-areas: 
        ". body   media1 ."
        ". media2 media1 ."
        ". media2 cta    ."
      ;
      min-height: 20em;
    }

    ._body   { grid-area: body; }
    ._media1 { grid-area: media1; }
    ._media2 { grid-area: media2; }
    ._cta    { grid-area: cta; }
  }


  
  #features {

    @media (min-width: 800px) {
      display: grid;
      grid-template-columns: [left] 1fr [right] 1fr;

      h2 {
        grid-column: 1;
        display: subgrid;
      }
    }

    & section {
      grid-column: 1 / 2;
      display: grid;
      grid-template-columns: subgrid;
      counter-increment: features;

      & ._media {
        grid-column: 2;
      }
    }
    & section h3::before {
      color: brown;
      display: block;
      margin-bottom: 1em;
    }
    & section:nth-of-type(1) h3::before { content: "⏺"; }
    & section:nth-of-type(2) h3::before { content: "⏺ ⏺"; }
    & section:nth-of-type(3) h3::before { content: "⏺ ⏺ ⏺"; }
    & section:nth-of-type(4) h3::before { content: "⏺ ⏺ ⏺ ⏺"; }
    & section h3::before {
      content: counter(features);
    }
  }


  #cta {
    --paper: #FFF0C6;
    padding: 2em;
    text-align: center;
    background: #FFF0C6;

    & p {
      margin-inline: auto;
      max-width: 40em;
    }

    .btn-text {
      --bg: var(--action-bg);
    }

    .btn-black { padding-inline: 1em; }
    .btn-black .icon {
      width: 1.5em;
      height: 1.5em;
      margin: -.25em;
      margin-inline-end: -.125em;
    }

    .assurances {
      max-width: var(--container);
      margin-inline: auto;
      font-stretch: semi-condensed;
      
      @media (min-width: 40rem) {
        display: flex;
        gap: 1em;
        flex-direction: row;
      }
    }
    .decoration {
      align-self: center;
      color: hsla(197, 83%, 61%, 1);
    }
  }
</style>
<!-- i could use urls with diacritics that also create pages without -->