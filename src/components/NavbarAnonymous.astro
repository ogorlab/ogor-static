---
import { useI18n } from "@/i18n"
import config from "astro.config.mjs"
import { getUrl as _getUrl } from "@/i18n"

const { t } = useI18n(Astro.currentLocale)
const { getUrl, key } = Astro.locals

const locales = config.i18n?.locales as unknown as string[]
---

<nav id="secondary_nav" class="flex tp-max:hidden">
  <select id="language_picker" onchange="window.location.href = document.querySelector(`link[hreflang=${this.value}]`).href">
    { locales.map((locale) => (
      <option value={ locale } selected={ locale === Astro.currentLocale }>
        { locale.toUpperCase() }
      </option>
    )) }
  </select>

  <ul>
    <li><a href={ getUrl("company") }>{ t("nav.company") }</a></li>
    <li><a href={ getUrl("company") + "#products" }>{ t("nav.products_long") }</a></li>
    <li class={key === "yield" ? "is-active" : ""}><a href={ getUrl("yield") }>{ t("nav.forecast_long") }</a></li>
    <!-- <li><a href={ getUrl("updates") }>{ t("nav.updates_long") }</a></li> -->
  </ul>
</nav>

<nav id="primary_nav">
  <a href={ getUrl("/") } id="nav_logo">
    <svg viewBox="0 0 960 384" height="64" >
      <use href="/logos/ogor.svg#logo" width="384" />
      <use href="/logos/ogor.svg#logotype" x="320" y="64" />
    </svg>
  </a>

  <span class="tp-max:hidden">
    <a href={"tel:" + t("company.phone").replaceAll(/[^+|^0-9.]/g, "")} class="no-wrap">
      <svg viewBox="0 0 48 48" class="icon">
        <use href="/icons.svg#phone" />
      </svg>
      <span class="underline">{t("company.phone")}</span>
    </a>
    &ensp;
    <a href={"mailto:" + t("company.email")} class="no-wrap">
      <svg viewBox="0 0 48 48" class="icon">
        <use href="/icons.svg#email" />
      </svg>
      <span class="underline">{t("company.email")}</span>
    </a>
  </span>

  <a href={ import.meta.env.PUBLIC_OGOR_APP_LOGIN_URL } class="btn btn-black rounded">
    { t("your_account") }
  </a>
  <button open-dialog-button id="hamburger-button" class="tl:hidden" ><img src="/src/images/icons/hamburger-open.svg" alt=""></button>

</nav>

<dialog data-dialog id="mobile-menu">
  <nav class="menu-nav">
    <div class="flex items-center">
      <a href={ getUrl("/") } id="nav_logo">
        <svg viewBox="0 0 960 384" height="64" >
          <use href="/logos/ogor.svg#logo" width="384" />
          <use href="/logos/ogor.svg#logotype" x="320" y="64" />
        </svg>
      </a>
      <button close-dialog-button id="hamburger-button" class="mobile-view" ><img src="/src/images/icons/hamburger-close.svg" alt=""></button>
    </div>
  </nav>
  <a id="your_account" href={ import.meta.env.PUBLIC_OGOR_APP_LOGIN_URL } class="btn btn-black rounded">
    { t("your_account") } ‚Üí
  </a>
  <ul>
    <li><a href={ getUrl("company") }>{ t("nav.company") }</a></li>
    <li><a href={ getUrl("company") + "#products" }>{ t("nav.products_long") }</a></li>
    <li><a href={ getUrl("yield") }>{ t("nav.forecast_long") }</a></li>
    <li><a href={ getUrl("updates") }>{ t("nav.updates_long") }</a></li>
  </ul>
  <div class="contact">
    <div>üìû <a href={"tel:" + t("company.phone").replaceAll(/[^+|^0-9.]/g, "")} class="inline-block">{t("company.phone")}</a></div>
    <div>‚úâÔ∏è <a href={"mailto:" + t("company.email")} class="inline-block">{t("company.email")}</a></div>
  </div>
  <p id="dialog-language-picker">
    { locales.map((locale) => (
      locale === Astro.currentLocale ? (
        <span class='muted'>{locale.toUpperCase()}</span>
      ) : (
        <a href={_getUrl(locale, key)}>
          {(locale as string).toUpperCase()}
        </a>
      )
    ))}      
  </p>
</dialog>



<script>
  const openDialogButton = document.querySelector("[open-dialog-button]")!;
  const closeDialogButton = document.querySelector("[close-dialog-button]")!;
  const mobileMenu = document.querySelector<HTMLDialogElement>("[data-dialog]")!;
  const body = document.querySelector("body")!;

  closeDialogButton.addEventListener("click", () => {
    closeMenu();
  });

  openDialogButton.addEventListener("click", () => {
    openMenu();
  });

  mobileMenu.addEventListener("close", () => {
    body.style.overflow = "auto";
  });

  function openMenu(){
    body.style.overflow = "hidden";
    mobileMenu!.showModal();
  }
  function closeMenu(){
    mobileMenu!.close();
  }
</script>
  
<style is:global>
  #primary_nav,
  #secondary_nav {
    & a:not(.btn) {
      color: inherit;
    }
  }
  #primary_nav {
    @apply t:gap-4 m:py-2 py-4;

    position: sticky;
    top: 0;
    z-index: 100;

    padding-inline: var(--bleed);
    display: flex;
    align-items: center;

    background: #fff;
  }

  #secondary_nav {
    align-items: center;
    gap: 1em;
    margin-inline: var(--bleed);
    padding-block: .5em;
    padding-inline: 1em;
    border-bottom-left-radius: 1.25rem;
    border-bottom-right-radius: 1.25rem;

    background: #F6F8F4;

    & ul {
      display: flex;
      display: contents;
      list-style-position: inside;
      padding-inline-start: initial;
  
      a {
        text-decoration: none;
      }
      a:hover {
        text-decoration: underline;
      }
      li:first-child {
        list-style-type: none;
      }
    }
  }

  #nav_logo {
    display: inline-block;
    margin-right: auto;
    
    & :where(img, svg) {
      margin: -6.5%;
      display: block;
      height: 3.5em;
      width: auto;
    }
  }

  #language_picker {
    background-color: transparent;
    border: none;
    margin: -0.5em;
    padding: 0.5em;
    margin-right: auto;
  }

  #hamburger-button{
    background-color: transparent;
    border: none;
    padding-inline: 1em;
    aspect-ratio: 1/1;
  }

  .desktop-view{ display: none; }

  dialog:modal {
    width: auto;
    height: auto;
    max-width: none;
    max-height: none;
    border: none;
    inset: 0;
    background-color: white;
    z-index: 1000;
    font-weight: 550;

    a, span { font-size: 125%; }

    ul{
      margin-top: 2em;
      list-style: none;
      padding: 0;
      a { text-decoration: none; }
      li { margin-bottom: 1em; }
    } 

    #hamburger-button { background-color: hsla(90, 22%, 96%, 1); border-radius: 50%; }
    #your_account{ width: 100%; padding: .5em; margin-top: 1em;}

    #dialog-language-picker{
      margin-left: -0.5em;
      a, span{ 
        border: none;
        background-color: transparent;
        padding: 1em 0.5em;
        text-decoration: none;
      }
    }
    
    .contact{ margin-top: 3em; }
    .contact a { margin-bottom: 1em; }
  }
</style>