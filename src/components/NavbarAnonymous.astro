---
import { useI18n } from "@/i18n"
import config from "astro.config.mjs"
import { getUrl as _getUrl } from "@/i18n"

const { t } = useI18n(Astro.currentLocale)
const { getUrl, key } = Astro.locals

const locales = config.i18n?.locales as unknown as string[]
---

<nav id="secondary_nav" class="flex tp-max:hidden">
  <select id="language_picker" onchange="window.location.href = document.querySelector(`link[hreflang=${this.value}]`).href">
    { locales.map((locale) => (
      <option value={ locale } selected={ locale === Astro.currentLocale }>
        { locale.toUpperCase() }
      </option>
    )) }
  </select>

  <ul class="ps-0 flex gap-4">
    <li><a href={ getUrl("company") }>{ t("nav.company") }</a></li>
    <li><a href={ getUrl("company") + "#products" }>{ t("nav.products_long") }</a></li>
    <li class={key === "yield" ? "is-active" : ""}><a href={ getUrl("yield") }>{ t("nav.forecast_long") }</a></li>
    <!-- <li><a href={ getUrl("updates") }>{ t("nav.updates_long") }</a></li> -->
  </ul>
</nav>

<nav id="primary_nav">
  <a href={ getUrl("/") } class="mr-auto">
    <svg viewBox="0 0 960 384" class="block h-[3.5em] m-[-6.5%]">
      <use href="/logos/ogor.svg#logo" width="384" />
      <use href="/logos/ogor.svg#logotype" x="320" y="64" />
    </svg>
  </a>

  <span class="tp-max:hidden">
    <a href={"tel:" + t("company.phone").replaceAll(/[^+|^0-9.]/g, "")} class="no-wrap">
      <svg viewBox="0 0 48 48" class="icon">
        <use href="/icons.svg#phone" />
      </svg>
      <span class="underline">{t("company.phone")}</span>
    </a>
    &ensp;
    <a href={"mailto:" + t("company.email")} class="no-wrap">
      <svg viewBox="0 0 48 48" class="icon">
        <use href="/icons.svg#email" />
      </svg>
      <span class="underline">{t("company.email")}</span>
    </a>
  </span>

  <a href={ import.meta.env.PUBLIC_OGOR_APP_LOGIN_URL } class="btn btn-black rounded-full">
    { t("your_account") }
  </a>
  <button class="tl:hidden p-[.5em] border-0 rounded-[.25em] bg-transparent" onclick="showMenu()" >
    <svg viewBox="0 0 48 48" class="icon">
      <use href="/public/icons.svg#menu" />
    </svg>
  </button>
</nav>

<dialog id="mobile-menu">
  <div class="flex items-center">
    <a href={ getUrl("/") } class="mr-auto">
      <svg viewBox="0 0 960 384" class="block h-[3em] m-[-6.5%]">
        <use href="/logos/ogor.svg#logo" width="384" />
        <use href="/logos/ogor.svg#logotype" x="320" y="64" />
      </svg>
    </a>
    <button class="p-[.5em] border-0 bg-[#f5f7f3] rounded-full" onclick="closeMenu()">
      <svg viewBox="0 0 48 48" class="icon">
        <use href="/public/icons.svg#close" />
      </svg>
    </button>
  </div>

  <p class="mb-[2em]">
    <a id="your_account" href={ import.meta.env.PUBLIC_OGOR_APP_LOGIN_URL } class="btn btn-black rounded">
      { t("your_account") } â†’
    </a>
  </p>
  <ul class="list-none ps-0">
    <li class="my-[1em]"><a href={ getUrl("/company") }>{ t("nav.company") }</a></li>
    <li class="my-[1em]"><a href={ getUrl("/company", "#products")}>{ t("nav.products_long") }</a></li>
    <li class="my-[1em]"><a href={ getUrl("/yield") }>{ t("nav.forecast_long") }</a></li>
    <li class="my-[1em]"><a href={ getUrl("/updates") }>{ t("nav.updates_long") }</a></li>
  </ul>
  <div class="flex flex-wrap gap-4 my-[2em]">
    <a href={"tel:" + t("company.phone").replaceAll(/[^+|^0-9.]/g, "")} class="no-wrap">
      <svg viewBox="0 0 48 48" class="icon">
        <use href="/icons.svg#phone" />
      </svg>
      <span class="underline">{t("company.phone")}</span>
    </a>
    <a href={"mailto:" + t("company.email")} class="no-wrap">
      <svg viewBox="0 0 48 48" class="icon">
        <use href="/icons.svg#email" />
      </svg>
      <span class="underline">{t("company.email")}</span>
    </a>
  </div>

  <p class="text-[smaller] font-normal flex flex-wrap gap-[1em]">
    { locales.map((locale) => (
      locale === Astro.currentLocale ? (
        <span class="text-muted">{t(locale)}</span>
      ) : (
        <a href={_getUrl(locale, key)}>{t(locale)}</a>
      )
    ))}      
  </p>
</dialog>
<script is:inline>
  function showMenu(){
    document.body.style.overflow = "hidden";
    document.querySelector("#mobile-menu").showModal();
  }
  function closeMenu(){
    document.body.style.overflow = null;
    document.querySelector("#mobile-menu").close();
  }
</script>
  
<style is:global>
  @layer reset {
    #primary_nav,
    #secondary_nav,
    dialog {
      & a {
        color: inherit;
        text-decoration: none;
      }
    } 
  }

  #primary_nav {
    @apply t:gap-4 m:py-2 py-4;

    position: sticky;
    top: 0;
    z-index: 100;

    padding-inline: var(--bleed);
    display: flex;
    align-items: center;

    background: #fff;
  }

  #secondary_nav {
    align-items: center;
    gap: 1em;
    margin-inline: var(--bleed);
    padding-block: .5em;
    padding-inline: 1em;
    border-bottom-left-radius: 1.25rem;
    border-bottom-right-radius: 1.25rem;
    background: #F6F8F4; 

    & ul {
      display: flex;
      margin: 0;
      margin-left: auto;
      list-style-position: inside;
      padding-inline-start: initial;
    }
    & li:first-child {
      list-style-type: none;
    }
  }

  dialog {
    width: auto;
    height: auto;
    max-width: none;
    max-height: none;
    border: none;
    inset: 0;
    background-color: white;
    z-index: 1000;
    font-weight: 500;
    font-size: 133.33%;
    font-stretch: 95%;

    #your_account{ width: 100%; padding: .5em; margin-top: 1em;}
  }

  #language_picker {
    padding: .5em;
    margin: -.5em;
    border: 0;
    background: transparent;
  }
</style>