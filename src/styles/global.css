@layer theme, base, components, layout, utilities;
@import "tailwindcss/theme.css" layer(theme);
/* @import "tailwindcss/preflight.css" layer(base); */
@import "tailwindcss/utilities.css" layer(utilities);

@theme {
  /* Define your custom breakpoints */
  --breakpoint-*: initial;
  --breakpoint-t: 37.5rem;
  --breakpoint-tl: 56.25rem;
  --breakpoint-d: 75rem;
  --breakpoint-dl: 100rem;

  /* Define your custom colors */
  --color-rust: #B36E1F;

  /* Define your custom box shadows */
  --shadow-screenshot: 0 1em 2em 0 hsla(0, 0%, 0%, 0.25);
  --shadow-map-preview: 0 0.25rem 1.5rem 0 rgba(0, 0, 0, 0.10);
  --shadow-md: 0 0.25em 0.5em 0 rgba(0, 0, 0, 0.15);
  --shadow-lg: 0 0.25em 1em 0 rgba(0, 0, 0, 0.15);

  /* Define your custom font sizes */
  --text-larger: larger;
}

@font-face {
  font-family: "Instrument Sans";
  font-weight: 400 900;
  font-display: block;
  src: url("/fonts/InstrumentSans-VF.ttf") format("truetype");
}
@font-face {
  font-family: "Instrument Sans";
  font-style: italic;
  font-weight: 400 900;
  font-display: block;
  src: url("/fonts/InstrumentSans-Italic-VF.ttf") format("truetype");
}

html {
  /* Theme */
  --paper:          #fff;
  
  --body:           rgba(0, 0, 0, 1);
  --muted:          rgba(0, 0, 0, 0.6);
  --disabled:       rgba(0, 0, 0, 0.5);
  --border:         rgba(0, 0, 0, 0.2);
  --bg-alt:         rgba(0, 0, 0, 0.13);
  --bg:             rgba(0, 0, 0, 0.07);

  --bg-alt-solid:   #dedede;
  --bg-solid:       #efefef;
  
  --action:        hsla(225, 100%, 60%, 1);
  --action-alt:    hsla(225, 100%, 55%, 1);
  --action-muted:  hsla(225, 100%, 60%, 0.6);
  --action-border: hsla(225, 100%, 60%, 0.4);
  --action-bg-alt: hsla(225, 100%, 60%, 0.2);
  --action-bg:     hsla(225, 100%, 60%, 0.1);

  --brand-yellow-6: #FFF0C6;
  --brand-yellow-5: #FFE79F;

  /* Sizing */
  --btn-radius: .25em;

  --container: 54em;

  /* Layout */
  --inner: 70rem;
  --margins: 1rem;
  --gutter: 2rem;
  
  @media (min-width: 37.5rem) {
    --margins: 2rem;    
  }
  
  --bleed: max(
    calc((100vw - var(--inner)) / 2),
    var(--margins)
  );
  --neg-bleed: calc( var(--bleed) * -1 );
}

html {
  font-family: "Instrument Sans", system-ui, sans-serif;
  line-height: 1.5;

  @media (width >= theme(--breakpoint-tl)) { font-size: 116.66%; }
  @media (width >= theme(--breakpoint-d))  { font-size: 133.33%; }
}

@layer reset {
  body {
    margin: 0;
  }
  select, textarea, input, button {
    font: inherit;
  }

  /* Links */
  a {
    color: var(--action);
  }
  .link {
    color: var(--action);
    text-decoration: underline;
    
    &:hover {
      color: var(--action);
    }

    &:where(button, input[type="submit"]) {
      appearance: none;
      margin: 0;
      padding: 0;
      border: 0;
      background: initial;
    }
  }
}

@layer components {
  /* Buttons */
  button,
  [type="submit"]:where(input) {
    cursor: pointer;
    font: inherit;
    line-height: inherit;
    
    [inert] &,
    &[disabled],
    &:disabled {
      cursor: not-allowed;  
    }
  }
  
  .btn {
    position: relative;
    display: inline-block;
    box-sizing: border-box;
    
    border-radius: var(--btn-radius);
    border: none solid var(--border);
    padding: .5em;
  
    -webkit-appearance: none;
    appearance: none;
    user-select: none;
    cursor: pointer;
    font: inherit;
    font-weight: 600;
    line-height: inherit;
    color: var(--color);
    text-align: center;
    text-decoration: none!important;
    background: var(--bg);
    box-shadow: var(--shadow);
  
    transition-property: background-color, color, box-shadow;
    transition-duration: 100ms;
    transition-timing-function: ease-in;
    
    &:hover,
    &:focus,
    &:active,
    &.pressed {
      z-index: 10;
    }
  
    &:hover,
    &:focus {
      outline: none;
      box-shadow: 
              0 0 0 2px var(--action),
        inset 0 0 0 2px var(--paper);
    }
  
    &:hover {
      --bg: var(--bg-alt);
      --bg: var(--action-bg);
    }
    &:active {
      --bg: var(--action-bg-alt);
      --border: var(--action);
    }
    &:focus {
      --bg: var(--action-bg);
      --border: var(--action);
    }
    &.pressed {
      --bg: var(--action);
      --color: #fff;
    }
  
    [inert] &,
    &[disabled],
    &:disabled {
      cursor: not-allowed;
      box-shadow: none!important;
      background-image: none!important;
      
      --color: var(--disabled);
      --border: transparent;
      --bg: var(--bg-alt);
    }
  }
  .btn-text {
    --color: var(--action);
    --border: transparent;
    --bg: transparent;
  
    &:hover {
      --bg: var(--action-bg);
    }
    &:active {
      --bg: var(--action-bg-alt);
    }
    [inert] &,
    &[disabled],
    &:disabled {
      --color: var(--action-muted);
      --bg: transparent;
    }
  }
  .btn-black {
    --color: #fff;
    --bg: black!important;
  }

  /* Icons */
  .icon,
  .emoji {
    display: inline-block;
    width: 1em;
    height: 1em;
    font-size: 150%;
    line-height: 1;
    vertical-align: -0.25em;
    
    & use {
      fill: currentColor;
    }
  }
  .emoji {
    vertical-align: middle;
  }
}

@utility text-muted {
  color: var(--muted);
}

@utility stretch-95 {
  font-stretch: 95%;
}

@layer layout {
  #viewport {
    min-height: 100vh;
    min-height: 100dvh;
    display: flex;
    flex-direction: column;
  }
  #content {
    flex-grow: 1;
  }
  
  .container {
    margin-inline: auto;
    max-width: var(--container);
  }

  .area-header { grid-area: header; }
  .area-media  { grid-area: media;  }
  .area-body   { grid-area: body;   }

  .area-media :where(img, picture, svg, video) {
    max-width: 100%;
    height: auto;
  }
  
  .layout-media {
    padding-inline: var(--bleed);
    
    @media (min-width: 37.5rem) {
      display: grid;
      grid-template-columns: 1fr 1fr;
      /* grid-template-rows: 1fr 1fr; */
      grid-template-areas:
        "header media"
        "body   media"
      ;
      gap: var(--gutter);
      row-gap: 1em;

      /* Move media to the left */
      &:where(.--left) {
        grid-template-areas:
          "media header"
          "media body"
        ;
      }
  
      /* Snap media to the edge of the viewport */
      & .area-media:where(.--bleed) {
        margin-right: var(--neg-bleed);
      }
    }
  }
}

/* Funky lists */
/* This doesn't work unfortunately. */
@counter-style bullet-counter {
  system: additive;
  additive-symbols: "⏺"
}

.li-bullet-1::before,
.li-bullet-2::before,
.li-bullet-3::before,
.li-bullet-4::before,
.li-bullet-5::before {
  display: block;
  margin-bottom: 1rem;
  white-space: nowrap;
  color: var(--li-color, inherit);
  letter-spacing: .125em;
  line-height: 1;
  overflow: visible;
}
.li-bullet-1::before { content: "⏺"; }
.li-bullet-2::before { content: "⏺⏺"; }
.li-bullet-3::before { content: "⏺⏺⏺"; }
.li-bullet-4::before { content: "⏺⏺⏺⏺"; }
.li-bullet-5::before { content: "⏺⏺⏺⏺⏺"; }

[data-marker] {
  list-style: none;
}
[data-marker] li::marker {
  content: "→ ";
}

